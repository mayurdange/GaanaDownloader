
private static final char[] n = new char[] { '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd',
			'e', 'f' };
	private static final char[] o = new char[] { '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D',
			'E', 'F' };

	public static byte[] a(byte[] bArr) {
		return b(bArr).getBytes(Charset.forName("UTF-8"));
	}

	public static String b(byte[] bArr) {
		return new String(c(bArr));
	}

	public static char[] c(byte[] bArr) {
		return a(bArr, true);
	}

	public static char[] a(byte[] bArr, boolean z) {
		return a(bArr, z ? n : o);
	}

	protected static char[] a(byte[] bArr, char[] cArr) {
		int i = 0;
		int length = bArr.length;
		char[] cArr2 = new char[(length << 1)];
		for (int i2 = 0; i2 < length; i2++) {
			int i3 = i + 1;
			cArr2[i] = cArr[(bArr[i2] & 240) >>> 4];
			i = i3 + 1;
			cArr2[i3] = cArr[bArr[i2] & 15];
		}
		return cArr2;
	}
	
	   public static String getBase64(String str) {
		   return Base64.getEncoder().encodeToString(str.getBytes()).trim();
	    }

	public static String getHashCode(String track_id, String token) {		
		String msg = getBase64(track_id);
		String hashCode = doHMAC(msg, token);
		return hashCode;
	}
	
	private static String doHMAC(String msg, String key){
		try {
			Key secretKeySpec = new SecretKeySpec(key.getBytes(), "HmacMD5");
			Mac instance = Mac.getInstance("HmacMD5");
			instance.init(secretKeySpec);
			return new String(a(instance.doFinal(msg.getBytes())), "UTF-8");
		} catch (NoSuchAlgorithmException e2) {
			e2.printStackTrace();
			return null;
		} catch (InvalidKeyException e3) {
			e3.printStackTrace();
			return null;
		} catch (UnsupportedEncodingException e4) {
			e4.printStackTrace();
			return null;
		} catch (Throwable e) {
			throw new RuntimeException(e);
		}		
	}
	String result = getHashCode("550","1594fdf1a2d607590747d5cad924fcac");
	System.out.println(result);
